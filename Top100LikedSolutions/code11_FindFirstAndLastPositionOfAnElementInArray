class Solution {

    public static int findfirstOccurrence(int[] nums, int target){
        int index = -1;
        int left = 0, right = nums.length - 1;
        while(left <= right){
            int mid = left + (right - left)/2;
            if(nums[mid] == target){
                index = mid;
                right = mid - 1;
            }else if(nums[mid] < target){
                left = mid + 1;
            }else{
                right = mid - 1;
            }
        }
        return index;
    }
    public static int findlastOccurrence(int[] nums, int target){
        int index = -1;
        int left = 0, right = nums.length - 1;
        while(left <= right){
            int mid = left + (right - left)/2;
            if(nums[mid] == target){
                index = mid;
                left = mid + 1;
            }else if(nums[mid] < target){
                left = mid + 1;
            }else{
                right = mid - 1;
            }
        }
        return index;
    }
    public int[] searchRange(int[] nums, int target) {
        int[] answer = {-1, -1};
        answer[0] = findfirstOccurrence(nums, target);
        answer[1] = findlastOccurrence(nums, target);
        return answer;
    }
}