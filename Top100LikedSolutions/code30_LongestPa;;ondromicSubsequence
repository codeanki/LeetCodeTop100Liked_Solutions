class Solution {
    public String longestPalindrome(String s) {
        if(s == null || s.length() == 0){
            return "";
        }
        int n = s.length();
        boolean[][] isPallindrome = new boolean[n][n];
        int start = 0, maxlength = 1;
        for(int i = 1; i < n; i++){
            isPallindrome[i][i] = true;
        }
        for(int i=0; i<n-1; i++){
            if(s.charAt(i) == s.charAt(i+1)){
                isPallindrome[i][i+1] = true;
                start = i;
                maxlength = 2;
            }
        }
        for(int len = 3; len <= n;len++){
            for(int i = 0;i<= n-len;i++){
                int j = i + len - 1;
                if(isPallindrome[i+1][j-1] && s.charAt(i) == s.charAt(j)){
                    isPallindrome[i][j] = true;
                    start = i;
                    maxlength = len;
                }
            }
        }
        return s.substring(start, start + maxlength);
    }
}