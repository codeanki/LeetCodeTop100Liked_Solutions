class Solution {
    public int findIndex(int[] arr, int start, int end, int target){
        for(int i = start; i <= end; i++){
            if(arr[i] == target){
                return i;
            }
        }
        return -1;
    }
    public TreeNode helper(int[] preorder, int preStart, int preEnd, int[] inorder,int inStart, int inEnd){
        if(preStart > preEnd || inStart > inEnd){
            return null;
        }
        int rootValue = preorder[preStart];
        TreeNode root = new TreeNode(rootValue);
        int rootInorderIndex = findIndex(inorder, inStart, inEnd, rootvalue);
        root.left = helper(preorder,preStart + 1,preStart + rootInorderIndex - inStart,inorder,inStart,rootInorderIndex - 1);
        root.right = helper(preorder,preStart + rootInorderIndex - inStart + 1,preEnd,inorder,rootInorderIndex + 1,inEnd);
        return root;
    }
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        return helper(preorder,0,preorder.length-1,inorder,0,inorder.length-1);
    }
}