class Solution {
    public List<Integer> findAnagrams(String s, String p) {
        List<Integer> answer = new ArrayList<>();
        if(s == null || p == null || s.length() < p.length()){
            return answer;
        }
        Map<Character, Integer> pMap = new HashMap<>();
        Map<Character, Integer> sMap = new HashMap<>();

        for(char c : p.toCharArray()){
            pMap.put(c, pMap.getOrDefault(c,0) + 1);
        }
        for(int i = 0; i < p.length(); i++){
            char ch = s.charAt(i);
            sMap.put(ch, sMap.getOrDefault(ch,0) + 1);
        }
        for(int i =0; i <= s.length() - p.length(); i++){
            if(sMap.equals(pMap)){
                answer.add(i);
            }
            char leftChar = s.charAt(i);
            sMap.put(leftChar, sMap.get(leftChar) - 1);
            if(sMap.get(leftChar) == 0){
                sMap.remove(leftChar);
            }
            if(i + p.length() < s.length()){
                char rightChar = s.charAt(i + p.length());
                sMap.put(rightChar, sMap.getOrDefault(rightChar, 0) + 1);
            }
        }
        return answer;
    }
}