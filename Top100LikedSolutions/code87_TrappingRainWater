class Solution {
    public int trap(int[] height) {
        int n = height.length;
        if(n <= 2){
            return 0;
        }
        int left = 0;
        int right = n-1;
        int leftMax = 0;
        int rightMax = 0;
        int trappedWater = 0;
        while(left < right){
            leftMax = Math.max(leftMax, height[left]);
            rightMax = Math.max(rightMax, height[right]);
            if(height[left] < height[right]){
                trappedWater += Math.max(0, leftMax - height[left]);
                left++;
            }else{
                trappedWater += Math.max(0, rightMax - height[right]);
                right--;
            }
        }
        return trappedWater;
    }
}